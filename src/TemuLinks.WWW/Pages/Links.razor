@page "/links"
@inject TemuLinks.WWW.Services.ITemuLinksApiClient Api

<PageTitle>Meine Links</PageTitle>

<div class="container-fluid mt-4">
    <h3>Meine Links</h3>

    <div class="mb-3">
        <button class="btn btn-outline-primary me-2" @onclick="LoadCount">Anzahl laden</button>
        @if (linkCount.HasValue)
        {
            <span class="badge bg-secondary">@linkCount.Value Links</span>
        }
    </div>

    <EditForm Model="createModel" OnValidSubmit="CreateLink">
        <DataAnnotationsValidator />
        <div class="row g-2 align-items-end">
            <div class="col-md-5">
                <label class="form-label">URL</label>
                <InputText class="form-control" @bind-Value="createModel.Url" />
            </div>
            <div class="col-md-5">
                <label class="form-label">Beschreibung</label>
                <InputText class="form-control" @bind-Value="createModel.Description" />
            </div>
            <div class="col-md-1 form-check">
                <InputCheckbox class="form-check-input" @bind-Value="createModel.IsPublic" />
                <label class="form-check-label">Öffentlich</label>
            </div>
            <div class="col-md-1">
                <button type="submit" class="btn btn-primary">Speichern</button>
            </div>
        </div>
    </EditForm>

    <hr />

    <div class="table-responsive">
        <table class="table table-striped w-100">
            <thead>
                <tr>
                    <th>Datum</th>
                    <th>Vorname</th>
                    <th></th>
                    <th>Beschreibung</th>
                    <th>Öffentlich</th>
                </tr>
            </thead>
            <tbody>
                @if (links == null)
                {
                    <tr><td colspan="5">Noch keine Daten. Klicke auf "Anzahl laden" oder speichere einen Link.</td></tr>
                }
                else
                {
                    @foreach (var l in links)
                    {
                        <tr>
                            <td style="white-space:nowrap;">
                                <div>@l.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy")</div>
                                <div class="text-muted" style="font-size:0.9em;">@l.CreatedAt.ToLocalTime().ToString("HH:mm")</div>
                            </td>
                            <td>@(GetFirstName(l.UserName))</td>
                            <td>
                                <a href="@l.Url" target="_blank" title="Webseite öffnen" class="text-decoration-none">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M14 3h7v7h-2V6.41l-9.29 9.3-1.42-1.42 9.3-9.29H14V3z"/>
                                        <path d="M5 5h5V3H3v7h2V5zm0 14v-5H3v7h7v-2H5z"/>
                                    </svg>
                                </a>
                            </td>
                            <td>@l.Description</td>
                            <td>@(l.IsPublic ? "Ja" : "Nein")</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<TemuLinks.WWW.Models.TemuLinkDto>? links;
    private int? linkCount;
    private TemuLinks.WWW.Models.CreateTemuLinkDto createModel = new();

    private async Task LoadCount()
    {
        linkCount = await Api.GetLinkCountAsync();
        links = await Api.GetLinksAsync();
    }

    private async Task CreateLink()
    {
        var created = await Api.CreateLinkAsync(createModel);
        if (created != null)
        {
            createModel = new();
            await LoadCount();
        }
    }

    private string GetFirstName(string? userName)
    {
        if (string.IsNullOrWhiteSpace(userName)) return string.Empty;
        var parts = userName.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return parts.Length > 0 ? parts[0] : userName.Trim();
    }
}


